# -*- coding: utf-8 -*-
"""Copy of Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19wWkhreUpD-HTWJ0E5leMnrYmKCt2Q6V
"""

class Product:
    def __init__(self, product_id, name, price, quantity):
        self.product_id = product_id
        self.name = name
        self.price = price
        self.quantity = quantity

    def __repr__(self):
        return (f"ID: {self.product_id}, Name: {self.name}, Price: INR{self.price:.2f}, "
                f"Quantity: {self.quantity}")


class Inventory:
    def __init__(self):
        self.products = {}

    def add_product(self, product_id, name, price, quantity):
        if product_id in self.products:
            print(f"Product ID {product_id} already exists.")
        else:
            self.products[product_id] = Product(product_id, name, price, quantity)
            print(f"Added {name} to inventory.")

    def update_stock(self, product_id, quantity):
        if product_id in self.products:
            self.products[product_id].quantity += quantity
            print(f"Updated stock for {self.products[product_id].name}. New Quantity: {self.products[product_id].quantity}")
        else:
            print(f"Product ID {product_id} not found.")

    def generate_report(self):
        print("Inventory Report:")
        for product in self.products.values():
            print(product)

    def search_product_by_id(self, product_id):
        product = self.products.get(product_id)
        if product:
            print(f"Found product: {product}")
        else:
            print(f"Product ID {product_id} not found.")

    def search_product_by_name(self, name):
        found = False
        for product in self.products.values():
            if name.lower() in product.name.lower():
                print(f"Found product: {product}")
                found = True
        if not found:
            print(f"No products found with the name '{name}'.")


def main():
    inventory = Inventory()

    # Adding products
    inventory.add_product(101, "Milk", 31, 100)
    inventory.add_product(102, "Bread", 30, 50)
    inventory.add_product(103, "Eggs", 3.00, 200)
    inventory.add_product(104, "Cheese", 95, 75)
    inventory.add_product(105, "Butter", 50, 30)
    inventory.add_product(106, "Yogurt", 75, 150)
    inventory.add_product(107, "Cereal", 30, 40)
    inventory.add_product(108, "Coffee", 15, 60)
    inventory.add_product(109, "Tea", 12, 80)
    inventory.add_product(110, "Bananas", 100, 200)


    while True:
        print("\nSupermarket Inventory Management")
        print("1. Add Product")
        print("2. Update Stock")
        print("3. Generate Report")
        print("4. Search Product by ID")
        print("5. Search Product by Name")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            product_id = int(input("Enter product ID: "))
            name = input("Enter product name: ")
            price = float(input("Enter product price: "))
            quantity = int(input("Enter product quantity: "))
            inventory.add_product(product_id, name, price, quantity)

        elif choice == "2":
            product_id = int(input("Enter product ID: "))
            quantity = int(input("Enter quantity to update: "))
            inventory.update_stock(product_id, quantity)

        elif choice == "3":
            inventory.generate_report()

        elif choice == "4":
            product_id = int(input("Enter product ID to search: "))
            inventory.search_product_by_id(product_id)

        elif choice == "5":
            name = input("Enter product name to search: ")
            inventory.search_product_by_name(name)

        elif choice == "6":
            print("Exiting...")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 6.")


if __name__ == "__main__":
    main()